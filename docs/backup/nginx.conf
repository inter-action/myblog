server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server ipv6only=on;

    server_name *.miaojing.me

    charset utf8;
    access_log  /var/log/nginx/host.access.log  main;

    keepalive_timeout 300s;
    #HSTS策略
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    ssl_certificate  /etc/letsencrypt/live/miaojing.me/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/miaojing.me/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_dhparam /etc/ssl/miaojing/dhparam.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;

    #减少点击劫持
    add_header X-Frame-Options DENY;
#禁止服务器自动解析资源类型
    add_header X-Content-Type-Options nosniff;
#防XSS攻擊
    add_header X-Xss-Protection 1;

    root   /home/interaction/ftp/blog/build;

    location / {
        index  index.html index.htm;
        try_files $uri $uri.html /index.html;
    }

    error_page  404              /404;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    #disable log that maybe triggered by robots/crawler
    location = /favicon.ico {
                log_not_found off;
                access_log off;

    }

    location = /robots.txt {
                log_not_found off;
                access_log off;
    }

    location ~* \.txt$ {
	    charset UTF-8;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    location /api {
        include proxy_params;
        proxy_pass   http://127.0.0.1:5000;
    }

    location /images {
        include proxy_params;
        proxy_pass   http://127.0.0.1:5000;
    }

    # deny access to any file that starts with dot
    #
    location ~* /\.(?!well-known\/) {
            deny all;
            access_log off;
            log_not_found off;
    }
}
